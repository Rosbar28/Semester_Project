<?xml version="1.0" encoding="UTF-8"?>

<?import java.net.URL?>
<?import javafx.scene.control.ScrollPane?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.text.Font?>

<AnchorPane id="AnchorPane" prefHeight="312.0" prefWidth="640.0" styleClass="mainFxmlClass" xmlns="http://javafx.com/javafx/16" xmlns:fx="http://javafx.com/fxml/1" fx:controller="SemesterProjectFinalController">
    <stylesheets>
        <URL value="@semesterprojectfinal.css" />
    </stylesheets>
    <children>
        <ScrollPane prefHeight="310.0" prefWidth="640.0">
            <content>
                <TextArea fx:id="txtInfo" accessibleText="txtDisp" editable="false" prefHeight="330.0" prefWidth="711.0" promptText="  " text="                                                         Game Description: &#10;&#10;   The 24-point game will display four cards randomly selected from 52 cards deck. Each card represents&#10; a number. An Ace, King, Queen, and Jack represent 1, 13, 12, and 11, respectively. The user MUST enter an &#10; expression that uses the four numbers from the four displayed cards. Each number must be used once &#10; and only once. To create the expression, You can use the operators (addition (+), subtraction (-), multiplication(*),&#10; and division(/)) and parentheses() in the expression. The expression must evaluate to 24. After entering the &#10; expression, click the Verify button to check whether the numbers in the expression are currently selected &#10; and whether the result of the expression is correct. You MUST click the VERIFY button, to check if your &#10; answer is correct. The expression might not exist. In this case, click the Refresh button to get another &#10; set of four cards. ">
                    <font>
                        <Font name="Times New Roman" size="18.0" />
                    </font>
                </TextArea>
            </content>
        </ScrollPane>
    </children>
</AnchorPane>
